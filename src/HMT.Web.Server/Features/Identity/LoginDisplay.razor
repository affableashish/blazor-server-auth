@*<AuthorizeView>
    <Authorized>
        <a href="#">Hello, @context.User.Identity?.Name!</a>
        <form method="post" action="#">
            <button type="submit" class="nav-link btn btn-link">Log out</button>
        </form>
    </Authorized>
    <NotAuthorized>
        <a href="#">Register</a>
        <a href="#">Log in</a>
    </NotAuthorized>
</AuthorizeView>*@

@*<span>Hi, User</span>
<button type="button" class="btn btn-link">Log Out</button>*@

@*Added by Identity Scaffolder*@

@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager Navigation
@inject TokenProvider TokenProvider

@*If you try to use this Razor Component that has Authorize components from component that IS NOT wrapped with <CascadingAuthenticationState>, it won't work,
    which is the reason why '<component type="typeof(LoginDisplay)" render-mode="ServerPrerendered" />' didn't work in _Layout.cshtml.
    Hence the reason to wrap it with CascadingAuthenticationState*@
<CascadingAuthenticationState>
    <AuthorizeView>
        <Authorized>
            <a href="Identity/Account/Manage/Index">
                Hi, @context.User.Identity.Name!
            </a>
            <form action="/Identity/Account/Logout?returnUrl=%2F" method="post">
                <button class="nav-link btn btn-link" type="submit">Logout</button>
                <input name="__RequestVerificationToken" type="hidden" 
                    value="@TokenProvider.XsrfToken">
            </form>
        </Authorized>
        <NotAuthorized>
            <a href="Identity/Account/Register">Register</a>
            <a href="Identity/Account/Login">Login</a>
        </NotAuthorized>
    </AuthorizeView>
</CascadingAuthenticationState>